<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <Style x:Key="GuideDataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="#200F53"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="CanUserAddRows" Value="False"/>

        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#BCBEE0"/>
                    <Setter Property="Padding" Value="10,0,0,10"/>
                    <Setter Property="FontFamily" Value="Montserrat"/>
                    <Setter Property="FontSize" Value="15"/>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="#200F53"/>
                    <Setter Property="Foreground" Value="#BCBEE0"/>
                    <Setter Property="FontFamily" Value="Montserrat"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="Margin" Value="0"/>
                </Style>
            </Setter.Value>
        </Setter>        
        
    </Style>


    <Style x:Key="CustomListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="#060531"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#78A3FC"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="#BCBEE0"/>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Background" Value="#060531"/>
                    <Setter Property="Foreground" Value="#BCBEE0"/>
                    <Setter Property="FontFamily" Value="Montserrat"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Padding" Value="10,0,0,10"/>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer VerticalScrollBarVisibility="Auto" 
                                  HorizontalScrollBarVisibility="Auto"
                                  Background="#060531">
                            <ScrollViewer.Resources>
                                <Style TargetType="ScrollBar">
                                    <Setter Property="Background" Value="#060531"/>
                                </Style>
                                <Style TargetType="Thumb">
                                    <Setter Property="Background" Value="#FB539B"/>
                                    <!-- ne radi, prepraviti -->
                                </Style>
                                <Style TargetType="RepeatButton">
                                    <Setter Property="Background" Value="#FB539B"/>
                                </Style>
                            </ScrollViewer.Resources>
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#FB539B"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Trigger>
        </Style.Triggers>              

    </Style>

    <Style x:Key="CustomListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Background" Value="#060531"/>
        <Setter Property="Foreground" Value="#BCBEE0"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="10,0,0,10"/>
        <Style.Triggers>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="#FB539B"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <!-- izmeniti, ne radi click -->
                <Setter Property="BorderBrush" Value="#78A3FC"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Trigger>            
        </Style.Triggers>
    </Style>


    <Style x:Key="CustomDateTimePickerStyleSimple" TargetType="xctk:DateTimePicker">
        <Setter Property="Background" Value="#060531"/>
        <Setter Property="Foreground" Value="#BCBEE0"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="BorderBrush" Value="#78A3FC"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Margin" Value="30"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style x:Key="GuideTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="LightGray" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontFamily" Value="Montserrat" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="CustomCheckpointItemsControlStyle" TargetType="ItemsControl">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,40" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <Ellipse Width="20" Height="20" Fill="{Binding Path=IndicatorColor}" Stroke="Pink" StrokeThickness="1"/>
                        <TextBlock Text="{Binding Path=Name}" Margin="5,0,0,0" VerticalAlignment="Center" Style="{StaticResource GuideTextBlockStyle}"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Define Colors -->
    <Color x:Key="BackgroundColor">#060531</Color>
    <Color x:Key="AccentColor1">#FB539B</Color>
    <Color x:Key="AccentColor2">#78A3FC</Color>
    <Color x:Key="TextColor">#BCBEE0</Color>

    <!-- Define Brushes -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />
    <SolidColorBrush x:Key="AccentBrush1" Color="{StaticResource AccentColor1}" />
    <SolidColorBrush x:Key="AccentBrush1.1" Color="#80FB539B" />
    <SolidColorBrush x:Key="AccentBrush2" Color="{StaticResource AccentColor2}" />
    <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}" />

    <!-- ToggleButton Template -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"
                        Grid.ColumnSpan="2"
                        CornerRadius="4"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1" />
            <Border x:Name="ButtonBorder"
                        Grid.Column="1"
                        Width="20"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="0">
                <Path x:Name="Arrow" 
                          Fill="{StaticResource TextBrush}"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrush2}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrush1.1}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentBrush1.1}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TextBox Template -->
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="Transparent"/>
    </ControlTemplate>

    <!-- ComboBox Style -->
    <Style x:Key="ModernComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush2}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                          Template="{StaticResource ComboBoxToggleButton}"
                                          Grid.Column="2"
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press" 
                                          Background="{StaticResource BackgroundBrush}"
                                          Foreground="{StaticResource TextBrush}"
                                          BorderBrush="{StaticResource AccentBrush2}"/>
                        <ContentPresenter Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="3,3,23,3"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"/>
                        <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}"
                                     Template="{StaticResource ComboBoxTextBox}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Margin="3,3,23,3"
                                     Focusable="True"
                                     Background="Transparent"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}" 
                                     Foreground="{StaticResource TextBrush}"/>
                        <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" 
                                            Background="{StaticResource BackgroundBrush}"
                                            BorderBrush="{StaticResource AccentBrush2}"
                                            BorderThickness="1" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>