<Application x:Class="BookingApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BookingApp"
             StartupUri="View/SignInForm.xaml">
    <Application.Resources>

        <!-- Natasini stilovi-->


        <SolidColorBrush x:Key="ButtonTextN" Color="#F4F4ED"/> 
        <SolidColorBrush x:Key="BackgroundColorN" Color="#F4F4ED"/> 
        <SolidColorBrush x:Key="AccentColorN" Color="#6665DD"/>
        <SolidColorBrush x:Key="TextColorN" Color="#3423A6"/>

        <Style x:Key="ButtonStyleN" TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource ButtonTextN}"/>
            <Setter Property="Background" Value="{StaticResource AccentColorN}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentColorN}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontSize" Value="30"/>

        </Style>

        <Style x:Key="HeaderStyleN" TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource TextColorN}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Arial"/>
        </Style>





        <!-- *********************** -->

        <SolidColorBrush x:Key="TouristBackgroundColor1" Color="#A6CEDA"/>
        <SolidColorBrush x:Key="TouristBackgroundColor2" Color="#4CB9DA"/>
        <SolidColorBrush x:Key="TouristGroundColor1" Color="#58DBD0"/>
        <SolidColorBrush x:Key="TouristGroundColor2" Color="#42BC87"/>
        <SolidColorBrush x:Key="TouristTextColor1" Color="#4C5FD9"/>
        <SolidColorBrush x:Key="TouristTextColor2" Color="#4C8BD9"/>
        
        <!-- Akos je napravio ovaj style -->
        <Style x:Key="TooltipStyle" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Border x:Name="SwitchBackground" Background="LightGray" CornerRadius="15"/>
                            <Ellipse x:Name="SwitchThumb" Fill="White" Width="25" Height="25" HorizontalAlignment="Left">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform X="0"/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="SwitchBackground" Property="Background" Value="Green"/>
                                <Setter TargetName="SwitchThumb" Property="Margin" Value="17,0,0,0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="SwitchBackground" Property="Background" Value="LightGray"/>
                                <Setter TargetName="SwitchThumb" Property="Margin" Value="3,0,0,0"/>
                            </Trigger>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SwitchThumb" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" To="15" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SwitchThumb" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" To="0" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Page">
            <Setter Property="Background" Value="White" />
            
        </Style>

        <Style TargetType="Button" x:Key="NotificationIconButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="border" Background="Transparent" CornerRadius="50" Width="40" Height="40">
                                <Border.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </Border.RenderTransform>
                                <Image Source="/View/TouristWindows/notification.png" Width="45" Height="45" Stretch="Uniform"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Opacity" Value="0.7"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                                     From="1" To="1.2" Duration="0:0:0.1" AutoReverse="True" RepeatBehavior="2x"/>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                                                     From="1" To="1.2" Duration="0:0:0.1" AutoReverse="True" RepeatBehavior="2x"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SearchButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#4C5FD9"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                                <Image Source="/View/TouristWindows/search.png" Stretch="Uniform" Margin="0"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="ButtonBorder" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="#3F51B8" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="ButtonBorder" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="#4C5FD9" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="EnlargeButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#4C5FD9"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                 To="1.1" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                 To="1.1" Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetName="ButtonBorder" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="#3F51B5" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                 To="1" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                 To="1" Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetName="ButtonBorder" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="#4C5FD9" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- *********************** -->
        
        <Style x:Key="HyperlinkStyle" TargetType="{x:Type Hyperlink}">
                <Setter Property="Foreground" Value="Blue"/>
                <Setter Property="TextDecorations" Value="Underline"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="AliceBlue"/>
                    </Trigger>
                </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>