<Page x:Class="BookingApp.View.HostPages.DelayPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:BookingApp.View.HostPages"
      xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
      mc:Ignorable="d" 
      d:DesignHeight="705" d:DesignWidth="1024"
      Title="DelayPage">
    <Page.Resources>
        <Style x:Key="DemoIconAnimation" TargetType="fa:IconImage">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsDemo}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <!-- Opacity animation -->
                                <DoubleAnimation
                    Storyboard.TargetProperty="Opacity"
                    From="0"
                    To="1"
                    Duration="0:0:0.5" 
                    BeginTime="0:0:4"/>
                                <!-- Left position animation -->
                                <DoubleAnimation
                    Storyboard.TargetProperty="(Canvas.Left)"
                    From="0"
                    To="400"
                    Duration="0:0:1.5" 
                     BeginTime="0:0:4"/>
                                <!-- Top position animation -->
                                <DoubleAnimation
                    Storyboard.TargetProperty="(Canvas.Top)"
                    From="0"
                    To="120"
                    Duration="0:0:1.5"
                     BeginTime="0:0:4"/>
                                <DoubleAnimation
                            Storyboard.TargetProperty="(Canvas.Left)"
                            From="400"
                            To="940"
                            Duration="0:0:2.1" 
                             BeginTime="0:0:8.9"/>
                                <DoubleAnimation
                                Storyboard.TargetProperty="(Canvas.Top)"
                                From="120"
                                To="190"
                                Duration="0:0:2.1"
                                 BeginTime="0:0:8.9"/>
                                <DoubleAnimation
                                Storyboard.TargetProperty="(Canvas.Left)"
                                From="940"
                                To="760"
                                Duration="0:0:1.5" 
                                 BeginTime="0:0:18.3"/>
                                <DoubleAnimation
                                Storyboard.TargetProperty="(Canvas.Top)"
                                From="190"
                                To="380"
                                Duration="0:0:1.5"
                                 BeginTime="0:0:18.3"/>
                                <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="1"
                                To="0"
                                Duration="0:0:0.8" 
                                BeginTime="0:0:22.7"/>


                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AnimatedBorderStyle" TargetType="Border">
            <Setter Property="Visibility" Value="Collapsed" />
            <Setter Property="Opacity" Value="0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsDemo}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <!-- Delay before showing -->
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:6" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                                <!-- Fade in -->
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" BeginTime="0:0:6" />
                                <!-- Delay before hiding -->
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5" BeginTime="0:0:8" />
                                <!-- Hide after fading out -->
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" BeginTime="0:0:8.5">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="AnimatedBorderStyle1" TargetType="Border">
            <Setter Property="Visibility" Value="Collapsed" />
            <Setter Property="Opacity" Value="0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsDemo}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <!-- Delay before showing -->
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:11" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                                <!-- Fade in -->
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" BeginTime="0:0:11" />
                                <!-- Delay before hiding -->
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5" BeginTime="0:0:13" />
                                <!-- Hide after fading out -->
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" BeginTime="0:0:13.5">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AnimatedBorderStyle2" TargetType="Border">
            <Setter Property="Visibility" Value="Collapsed" />
            <Setter Property="Opacity" Value="0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsDemo}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <!-- Delay before showing -->
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:19.8" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                                <!-- Fade in -->
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" BeginTime="0:0:19.8" />
                                <!-- Delay before hiding -->
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5" BeginTime="0:0:21.8" />
                                <!-- Hide after fading out -->
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" BeginTime="0:0:22.3">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.Background>
            <LinearGradientBrush StartPoint="0,2" EndPoint="1,1">
                <GradientStop Color="#47D2E8" Offset="0.1"/>
                <GradientStop Color="#FFD7F2" Offset="0.9"></GradientStop>
            </LinearGradientBrush>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="70" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Canvas>
            <fa:IconImage x:Name="DemoIcon" Opacity="0" Style="{StaticResource DemoIconAnimation}" Icon="MousePointer" Foreground="#1A1A1A" Height="25" HorizontalAlignment="Left" Margin="5, 0, 0, 0"/>
        </Canvas>
        <Border CornerRadius="15" Style="{StaticResource AnimatedBorderStyle}"  Grid.ColumnSpan="3" Grid.RowSpan="2" BorderThickness="1" Background="#6665DD" Grid.Row="0" Margin="0 0 300 430" Width="100" Height="50">
            <TextBlock Grid.Row="1" Background="Transparent" TextWrapping="Wrap" Foreground="White" Text="Select request to delay" TextAlignment="Center" Grid.RowSpan="3" Margin="9,6,9,6"/>
        </Border>
        <Border CornerRadius="15" Style="{StaticResource AnimatedBorderStyle1}" Grid.ColumnSpan="3" Grid.RowSpan="2" BorderThickness="1" Background="#6665DD" Grid.Row="0" Margin="870 30 0 430" Width="120" Height="50">
            <TextBlock Grid.Row="1" Background="Transparent" TextWrapping="Wrap" Foreground="White" Text="Enter explanation for approving" TextAlignment="Center" Grid.RowSpan="3" Margin="9,6,9,6"/>
        </Border>
        <Border CornerRadius="15" Style="{StaticResource AnimatedBorderStyle2}" Grid.ColumnSpan="3" Grid.RowSpan="2" BorderThickness="1" Background="#6665DD" Grid.Row="0" Margin="420 60 0 0" Width="100" Height="50">
            <TextBlock Grid.Row="1" Background="Transparent" TextWrapping="Wrap" Foreground="White" Text="Approve or reject delay" TextAlignment="Center" Grid.RowSpan="3" Margin="9,6,9,6"/>
        </Border>
        <Label
    x:Name="TitleLabel"
    Grid.ColumnSpan="2"
    VerticalAlignment="Center"
    HorizontalAlignment="Center"
    Content="Delay request"
    Style="{StaticResource TitleStyleHost}"
     />






        <Grid Grid.Column="1" Grid.Row="1" Margin="0,10,0,0">

            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="20" />
                <RowDefinition Height="40" />
                <RowDefinition Height="110" />
                <RowDefinition Height="40" />
                <RowDefinition Height="90" />
                <RowDefinition Height="50" />
                <RowDefinition Height="*" />

            </Grid.RowDefinitions>
            <Label
            x:Name="RequestLabel"
            Grid.Row="0"
            Grid.Column="1"
            Margin="5,0,0,0"
            VerticalAlignment="Center"
            Style="{StaticResource LableStyleHost}"
            Content="Request processing"
            HorizontalAlignment="Center"
            FontSize="24"
            
             />



            <StackPanel Grid.Row="2" Margin="5 0 0 0">
                <Label Content="Explanation:" Style="{StaticResource LableStyleHost}" VerticalAlignment="Bottom" Margin="0,0,0,0" />
            </StackPanel>
            <TextBox x:Name="ExplanationTextBox" TextWrapping="Wrap" Width="416" Grid.Row="3" Height="100" HorizontalAlignment="Left" Margin="5,0,0,5"  Text="{Binding Path= Delay.Comment, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"></TextBox>

            <Label Content="Enter an explanation only with request rejection." Style="{StaticResource LableStyleHost}" Grid.Row="4" VerticalAlignment="Bottom">

            </Label>
            <StackPanel Grid.Row="5" HorizontalAlignment="Left" Margin="5 0 0 0" VerticalAlignment="Center" Orientation="Horizontal">
                <Button Content="Approve" Style="{StaticResource ButtonStyleHost}" Command="{Binding ApproveCommand}" FontSize="15" Width="90" Height="40" Margin="0 0 160 0">
                </Button>
                <Button Content="Reject" Style="{StaticResource ButtonStyleHost}" Command="{Binding RejectCommand}"  FontSize="15" Width="90" Height="40" Margin="75 0 0 0">

                </Button>
            </StackPanel>
            <Label Content="Request Cancellings:" Grid.Row="6" VerticalAlignment="Bottom" Style="{StaticResource LableStyleHost}">

            </Label>

            <ListBox x:Name="NotificationListBox" Background="Transparent" Height="150" Margin="5,0,211,50" Grid.Row="7" ScrollViewer.VerticalScrollBarVisibility="Auto" ItemsSource="{Binding Notifications}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="#A0CCED" BorderThickness="1" Margin="0,0,0,5">
                            <TextBlock FontFamily="Segoe UI" FontSize="13" Text="{Binding}" Padding="5"/>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Background" Value="White"></Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>



        </Grid>


        <Label Content="select request:" Style="{StaticResource LableStyleHost}" VerticalAlignment="Top" Grid.Row="1" Margin="30 15 0 0">

        </Label>
        <StackPanel Orientation="Horizontal" Grid.Column="0" VerticalAlignment="Top" Grid.Row="2" Margin="32 40 0 0">
            <Image Source="../../Resources/Images/red_dot.png" Width="20" Height="25"/>
            <Label VerticalAlignment="Center" Style="{StaticResource LableStyleHost}" Margin="10 0 0 0" Content="reserved" >

            </Label>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Column="0" VerticalAlignment="Top" Grid.Row="3" Margin="35 40 0 0" Height="81">
            <Image Source="../../Resources/Images/blue_square.png" Width="16" Height="20"/>
            <Label VerticalAlignment="Center" Margin="10 0 0 0" Content="not reserved"  Style="{StaticResource LableStyleHost}">
            </Label>
        </StackPanel>
        <ListView
x:Name="AccommodationsListView"
Margin="30,104,50,40"
Padding="0"
Background="Transparent"
Grid.Row="1"
BorderThickness="0"
ItemsSource="{Binding Delays}"
ScrollViewer.VerticalScrollBarVisibility="Auto"
SelectedItem="{Binding SelectedDelay}"
SelectionMode="Single">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource ListViewItemSelectedStyle}">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Margin" Value="0,5,5,5" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Border
            BorderBrush="#A0CCED"
            BorderThickness="4"
            CornerRadius="5">
                        <Grid Height="Auto" >
                            <Grid.Background>
                                <LinearGradientBrush StartPoint="0,2" EndPoint="1,1">
                                    <GradientStop Color="White" Offset="0.1"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />

                            </Grid.RowDefinitions>

                            <StackPanel Orientation="Horizontal" Grid.Row="0"  Margin="15 0 0 0">
                                <Label Content="guest username:" FontSize="13" VerticalAlignment="Center" />
                                <TextBlock FontWeight="Bold"
                                Margin="5,0,0,0"
                                Text="{Binding GuestUsername}" 
                                Style="{StaticResource TextBlockStyleHost}"
                                VerticalAlignment="Center"/>

                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Grid.Row="1"  Margin="15 0 0 0">
                                <Label Content="accommodation name:" FontSize="13" VerticalAlignment="Center" />
                                <TextBlock FontWeight="Bold"
                                Margin="5,0,0,0"
                                Text="{Binding ReservationName}" 
                                 Style="{StaticResource TextBlockStyleHost}"
                                VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Row="2"  Margin="15 0 0 0">
                                <Label Content="last date:" FontSize="13" VerticalAlignment="Center" />
                                <TextBlock FontWeight="Bold"
                                Margin="5,0,0,0"
                                Text="{Binding DateLastString}"
                                 Style="{StaticResource TextBlockStyleHost}"
                                VerticalAlignment="Center"/>

                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Row="3"  Margin="15 0 0 0">
                                <Label Content="new date:" FontSize="13" VerticalAlignment="Center" />
                                <TextBlock FontWeight="Bold"
                                    Margin="5,0,0,0"
                                    Text="{Binding DateString}" 
                                     Style="{StaticResource TextBlockStyleHost}"
                                    VerticalAlignment="Center"/>

                                <Image VerticalAlignment="Center" Margin="20 0 0 0" Width="20">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="../../Resources/Images/blue_square.png"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Reserved}" Value="True">
                                                    <Setter Property="Source" Value="../../Resources/Images/red_dot.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Reserved}" Value="False">
                                                    <Setter Property="Source" Value="../../Resources/Images/blue_square.png"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>

                                </Image>
                            </StackPanel>








                        </Grid>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</Page>
